var tipuesearch = {"pages": [{'title': '簡介', 'text': '132 \n 此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以git子模塊添加\xa0 https://github.com/mdecourse/cmsimde  \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n 40871106 \n', 'tags': '', 'url': '簡介.html'}, {'title': '發展', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n', 'tags': '', 'url': '發展.html'}, {'title': '關於', 'text': '設計二甲\xa0 黃翊銘 \n 倉儲: https://github.com/40871106/cad2020 \n', 'tags': '', 'url': '關於.html'}, {'title': '進度', 'text': '', 'tags': '', 'url': '進度.html'}, {'title': 'W1建網頁', 'text': '(1)下載 fall2020_cp.7 壓縮檔\xa0 \xa0解壓縮到我的隨身系統(USB) \n (2)下載 \xa0 Portable GIT. \xa0解壓縮並放入DATA中的PortableGit資料夾中 \n (3) 修改Start的路徑 \n (4)到github 新建一個資料庫 ，將其命名為cad2020 \n (5) 到github網站git clone自己倉儲的網址clone完後git submodule add \n (6)進入cmsimde\xa0 把up_dir裡的東西全部複製 \n (7)放到cmsimde外面\xa0 cad2020的目錄下 \n \xa0 (8)進入cmsimde目錄下\xa0 \xa0將wsgi.py拖入SciTE\xa0 \xa0 \xa0tools-->go (快捷鍵-->F5) \n (9)若成功了 記得\xa0 git push 才能把網頁推上去 不然會顯示不出來!!!\xa0 \n', 'tags': '', 'url': 'W1建網頁.html'}, {'title': 'W2', 'text': '', 'tags': '', 'url': 'W2.html'}, {'title': 'pdf 1 video', 'text': '\n', 'tags': '', 'url': 'pdf 1 video.html'}, {'title': 'pdf 2 video', 'text': '\n', 'tags': '', 'url': 'pdf 2 video.html'}, {'title': 'W3', 'text': 'holiday ! \n', 'tags': '', 'url': 'W3.html'}, {'title': 'W4', 'text': 'ssh \n', 'tags': '', 'url': 'W4.html'}, {'title': 'W5', 'text': 'API為Application Program Interface英文縮寫, 意為應用編程接口 \n SOLIDWORKS應用程序編程接口（API）是SOLIDWORKS軟件的COM編程接口。 \n 和操作使用軟件本身的功能一樣，屬於應用手法的一種。一般的操作是：通過鼠標點擊，鍵盤鍵入數字操作它現有的按鈕，命令；而API 則是通過編程語言代碼，對現有的功能進行一定的控制，形成新的命令或功能，即利用編程代碼來操控軟件的現有功能 \n 該API包含數百種函數，您可以從Visual Basic（VB），Visual Basic for Applications（VBA），VB.NET，C ++，C＃或SOLIDWORKS宏文件中調用。 \n \n', 'tags': '', 'url': 'W5.html'}, {'title': 'W6', 'text': '\n', 'tags': '', 'url': 'W6.html'}, {'title': 'W7', 'text': '\n', 'tags': '', 'url': 'W7.html'}, {'title': 'W8', 'text': '\n', 'tags': '', 'url': 'W8.html'}, {'title': 'W9', 'text': '\n', 'tags': '', 'url': 'W9.html'}, {'title': 'W10', 'text': '\n', 'tags': '', 'url': 'W10.html'}, {'title': 'W11', 'text': '\n', 'tags': '', 'url': 'W11.html'}, {'title': 'W12', 'text': '\n \n \n', 'tags': '', 'url': 'W12.html'}]};